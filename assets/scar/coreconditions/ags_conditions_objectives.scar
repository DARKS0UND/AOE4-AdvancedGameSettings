---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
--
-- Description:
-- Contains condition helpers for objective handling.
---------------------------------------------------------------------------------------------------

AGS_OBJECTIVES_WONDER_SELF = {	
	-- "Defend your Wonder"
	title = "$11159071",
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_wonder",
	telemetry = "defendWonderObj",
	music = "mus_stinger_wonder_win_countdown_player",
}
AGS_OBJECTIVES_WONDER_ALLY = {	
	-- "Defend %1PLAYER_NAME%'s Wonder"	
	title = "$11159070",
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_wonder",
	telemetry = "defendWonderObj",
	music = "mus_stinger_wonder_win_countdown_ally",
}
AGS_OBJECTIVES_WONDER_ENEMY = {	
	-- "Destroy %1PLAYER_NAME%'s Wonder"
	title = "$11159069",
	icon = "icons/objectives/objectives_warning_small",
	telemetry = "destroyWonderObj",
	music = "mus_stinger_wonder_win_countdown_enemy",
}

AGS_OBJECTIVES_WONDER = {
	reason = WR_WONDER,
	-- "Build a Wonder"
	title = "$11159068", 
	-- "Failed to hold the wonder."
	title_lost = "$64c5019a145c4e4da448dbd3adeea61e:277",
	description = Loc_Empty(),
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_wonder",
	data_template = "WonderObjectiveTemplate",
	data_template_or = "WonderOrObjectiveTemplate",
	priority = OT_Primary,
	parent = 0,
	telemetry = "wonderObj",
	alert = "icons\\event_queue_high_priority_large",
}

AGS_OBJECTIVES_SCORE = {
	reason = AGS_WR_SCORE,
	-- "Survive and outshine everyone."
	title = "$64c5019a145c4e4da448dbd3adeea61e:270", 
	-- "Survive and outshine everyone. Rank %1RANK_POSITION%."
	title_rank = "$64c5019a145c4e4da448dbd3adeea61e:312",
	-- "Your empire was forgotten by the history."
	title_lost = "$64c5019a145c4e4da448dbd3adeea61e:271",
	-- "Your Empire shines brightest."
	title_victory = "$64c5019a145c4e4da448dbd3adeea61e:272",
	description = Loc_Empty(),
	icon = "icons\\objectives\\objectives_generic",
	data_template = DT_PRIMARY_DEFAULT,
	data_template_or = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "scoreObj",
	alert = "icons\\event_queue_high_priority_large",
}

AGS_OBJECTIVES_TREATY = {
	reason = AGS_WR_TREATY,
	-- "Prepare for the war."
	title = "$64c5019a145c4e4da448dbd3adeea61e:307", 
	-- "Treaty is over, prepare for bloodshed.
	title_over = "$64c5019a145c4e4da448dbd3adeea61e:233",
	-- "This was not supposed to happen.
	title_lost = "$64c5019a145c4e4da448dbd3adeea61e:308",
	-- "Pen is truly strongest weapon in history."
	title_victory = "$64c5019a145c4e4da448dbd3adeea61e:309",
	description = Loc_Empty(),
	icon = "icons\\objectives\\objectives_capture",
	data_template = DT_PRIMARY_DEFAULT,
	data_template_or = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "treatyObj",
	alert = "icons\\event_queue_high_priority_large",
}

AGS_OBJECTIVES_CONQUEST = {
	reason = WR_CONQUEST,
	-- "Destroy all enemy landmarks"
	title = "$11159056", 
	-- "Your empire has been conquered."
	title_lost = "$64c5019a145c4e4da448dbd3adeea61e:268",
	-- "Conquered all enemies."
	title_victory = "$64c5019a145c4e4da448dbd3adeea61e:269",
	description = Loc_Empty(),
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_conquest",
	data_template = "ConquestObjectiveTemplate",
	data_template_or = "ConquestObjectiveTemplate",
	priority = OT_Primary,
	parent = 0,
	telemetry = "conquestObj",
	alert = "icons\\event_queue_high_priority_large",
}

AGS_OBJECTIVES_REGICIDE = {
	reason = AGS_WR_REGICIDE,
	-- Your King must survive. 
	title = "$11218487", 
	-- "Failed to protect the king."
	title_lost = "$64c5019a145c4e4da448dbd3adeea61e:263",
	-- "Truly a king of everyone you are."
	title_victory = "$64c5019a145c4e4da448dbd3adeea61e:262",
	description = Loc_Empty(),
	icon = "icons\\objectives\\objectives_leader",
	data_template = DT_PRIMARY_DEFAULT,
	data_template_or = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "regicideObj",
	alert = "icons\\event_queue_high_priority_large",
}

AGS_OBJECTIVES_TEAMSOLIDARITY = {
	reason = AGS_WR_TEAM_SOLIDARITY,
	-- Protect your teammates.
	title = "$64c5019a145c4e4da448dbd3adeea61e:230", 
	-- "Failed to protect %1PLAYER_NAME%."
	title_lost = "$64c5019a145c4e4da448dbd3adeea61e:257",
	-- "All other teams crumbled."
	title_victory = "$64c5019a145c4e4da448dbd3adeea61e:258",
	description = Loc_Empty(),
	icon = "icons\\objectives\\objectives_generic",
	data_template = DT_PRIMARY_DEFAULT,
	data_template_or = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "teamsolidarityObj",
	alert = "icons\\event_queue_high_priority_large",
}

AGS_OBJECTIVES_SURRENDER = {
	reason = AGS_WR_SURRENDER,
	-- "Fight until the bitter end."
	title = "$64c5019a145c4e4da448dbd3adeea61e:252", 
	description = Loc_Empty(),
	icon = "icons\\objectives\\objectives_generic",
	data_template = DT_PRIMARY_DEFAULT,
	data_template_or = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "surrenderObj",
	alert = "icons\\event_queue_high_priority_large",
}

AGS_OBJECTIVES_ELIMINATION = {
	reason = AGS_WR_ELIMINATION,
	-- "Prevail until the end."
	title = "$64c5019a145c4e4da448dbd3adeea61e:253", 
	description = Loc_Empty(),
	icon = "icons\\objectives\\objectives_generic",
	data_template = DT_PRIMARY_DEFAULT,
	data_template_or = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "eliminationObj",
	alert = "icons\\event_queue_high_priority_large",
}

AGS_OBJECTIVES_ANNIHILATION = {
	reason = AGS_WR_ANNIHILATION,
	-- "Annihilate everything."
	title = "$64c5019a145c4e4da448dbd3adeea61e:259", 
	description = Loc_Empty(),
	icon = "icons\\objectives\\objectives_generic",
	data_template = DT_PRIMARY_DEFAULT,
	data_template_or = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "annihilationObj",
	alert = "icons\\event_queue_high_priority_large",
}

---------------------------------------------------------------------------------------------------
-- Functions:
---------------------------------------------------------------------------------------------------
-- Creates objective by combining core and template.
-- Currently only for title, icon, telemetry.
function AGS_Objectives_CreateFromCore(core, template)
	local new_objective = {
		reason = core.reason,
		title = core.title, 
		description = core.description,
		icon = core.icon,
		data_template = core.data_template,
		data_template_or = core.data_template_or,
		priority = core.priority,
		parent = core.parent,
		telemetry = core.telemetry,
		alert = core.alert,	
	}
	if template.title ~= nil then
		new_objective.title = template.title
	end
	if template.icon ~= nil then
		new_objective.icon = template.icon
	end
	if template.telemetry ~= nil then
		new_objective.telemetry = template.telemetry
	end	
	if template.music ~= nil then
		new_objective.music = template.music
	end	
	return new_objective
end

function AGS_Objectives_PresentWrap(obj_id, obj_state, obj_title, obj_title_param)
	return {
		id = obj_id,
		state = obj_state,
		title = obj_title,
		title_param = obj_title_param,
	}
end

function AGS_Objectives_Present(objective_id, state, title, title_param)
	local formatted_title = nil
	if title_param ~= nil then
		formatted_title = Loc_FormatText(title, title_param)		
	else
		formatted_title = Loc_FormatText(title)
	end
	if state ~= nil then
		Obj_SetState(objective_id, state)
	end
	Obj_CreatePopup(objective_id, formatted_title)	
end

function AGS_Objectives_Progress(objective, current_count, max_count, progress_percentage, timer)
	-- Current progress done.
	if current_count ~= nil then
		Obj_SetCounterCount(objective, current_count)
	end
	-- Maximum progress that can be done.
	if max_count ~= nil then
		Obj_SetCounterMax(objective, max_count)
	end
	-- Percentage completed.
	if progress_percentage ~= nil then
		Obj_SetProgress(objective, progress_percentage)
	end
	
	if timer ~= nil then
		Obj_SetCounterTimerSeconds(objective, timer)
	end
end
-- State is either OS_Complete, OS_Incomplete or OS_Failed
-- Counter is either COUNTER_TimerDecreasing or COUNTER_CountUpTo
function AGS_Objectives_Set(objective, state, visibility, progress, counter, title)
	if objective == nil then
		AGS_Print("AGS: OBJECTIVE WAS NOT DEFINED!")
	end
	-- Current state of an objective.
	if state ~= nil then
		Obj_SetState(objective, state)
	end
	-- Is objective visible ?
	if visibility ~= nil then
		Obj_SetVisible(objective, visibility)
	end
	-- Is objective progress visible ?
	if progress ~= nil then
		Obj_SetProgressVisible(objective, progress)
	end
	-- How is progress displayed ?
	if counter ~= nil then
		Obj_SetCounterType(objective, counter)
	end
	-- Dynamic change of displayed title ?
	if title ~= nil then
		Obj_SetTitle(objective, title)
	end
end

function AGS_Objectives_Create(objective_data, player, title_param, parent)
	-- Select proper template to display objective.
	local template = objective_data.data_template
	if AGS_Conditions_IsPrimary(objective_data.reason) then
		template = objective_data.data_template_or
	end
	-- Format title with a paramter.
	local title = objective_data.title
	if title_param ~= nil then
		title = Loc_FormatText(title, title_param)
	end
	-- Create as child or independent.
	if parent == nil then
		parent = objective_data.parent
	end
	
	return AGS_Objectives_CreateNew(objective_data, player, title, template, parent)
end

---------------------------------------------------------------------------------------------------
-- Internal Functions:
---------------------------------------------------------------------------------------------------
-- Returns new objective from supplied parameters.
function AGS_Objectives_CreateNew(objective, player, title, template, parent)
	return Obj_Create(
		player.id, -- Most likely always local player ?
		title,
		objective.description, 	
		objective.icon, 
		template, 
		player.raceName, 
		objective.priority, -- objective type e.g. primary or secondary
		parent, -- parent objective
		objective.telemetry
	)	
end