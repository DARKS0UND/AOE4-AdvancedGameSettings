---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
--
-- Description:
-- Contains visuals and helpers for conditions such as treaty and conquest.
---------------------------------------------------------------------------------------------------
AGS_EVENT_CUE_DELAY = 2.0



AGS_OBJECTIVE_CONQUEST = {
	reason = WR_CONQUEST,
	-- "Destroy all enemy landmarks"
	title = "$11159056", 
	description = Loc_Empty,
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_conquest",
	data_template = "ConquestObjectiveTemplate",
	priority = OT_Primary,
	parent = 0,
	telemetry = "conquestObj",
	alert = "icons\\event_queue_high_priority_large",
}
AGS_OBJECTIVE_RELIGIOUS = {
	reason = AGS_WR_RELIGIOUS,
	-- "Control all Holy Sites"
	title = 11169980, 
	title_capture = 11169980, 
	-- "Neutralize a Holy Site"
	title_neutralize = 11183992,
	-- "Defend all Holy Sites"
	title_defend = 11190384,
	description = Loc_Empty,
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_religious",
	data_template = "HolySiteObjectiveDataTemplate",
	data_template_secondary = "HolySiteOrObjectiveDataTemplate",
	priority = OT_Primary,
	parent = 0,
	telemetry = "religiousObj",
	alert = "icons\\event_queue_high_priority_large",
}
AGS_OBJECTIVE_RELIGIOUS_SITES = {
	reason = AGS_WR_RELIGIOUS,
	-- "Site %1NUMBER%"
	title = 11184017, 
	description = Loc_Empty,
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_religious",
	data_template = "HolySiteSecondaryObjectiveDataTemplate",
	data_template_secondary = "HolySiteSecondaryObjectiveDataTemplate",
	priority = OT_Secondary,
	parent = 0,
	telemetry = "holySiteObj",
	alert = "icons\\event_queue_high_priority_large",
}
AGS_OBJECTIVE_WONDER_BUILD = {
	reason = WR_WONDER,
	-- "Build a Wonder"
	title = "$11159068", 
	description = Loc_Empty,
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_wonder",
	data_template = "WonderObjectiveTemplate",
	data_template_secondary = "WonderOrObjectiveTemplate",
	priority = OT_Primary,
	parent = 0,
	telemetry = "wonderObj",
	alert = "icons\\event_queue_high_priority_large",
}
AGS_OBJECTIVE_WONDER_SELF = {
	reason = WR_WONDER,
	-- "Defend your Wonder"
	title = "$11159071", 
	description = Loc_Empty,
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_wonder",
	data_template = "WonderObjectiveTemplate",
	data_template_secondary = "WonderObjectiveTemplate",
	priority = OT_Primary,
	parent = 0,
	telemetry = "defendWonderObj",
	alert = "icons\\event_queue_high_priority_large",
}
AGS_OBJECTIVE_WONDER_TEAM = {
	reason = WR_WONDER,
	-- "Defend %1PLAYER_NAME%'s Wonder"	
	title = 11159070, 
	description = Loc_Empty,
	icon = "icons\\races\\common\\victory_conditions\\victory_condition_wonder",
	data_template = "WonderObjectiveTemplate",
	data_template_secondary = "WonderObjectiveTemplate",
	priority = OT_Primary,
	parent = 0,
	telemetry = "defendWonderObj",
	alert = "icons\\event_queue_high_priority_large",
}
AGS_OBJECTIVE_WONDER_ENEMY = {
	reason = WR_WONDER,
	-- "Destroy %1PLAYER_NAME%'s Wonder"
	title = 11159069, 
	description = Loc_Empty,
	icon = "icons/objectives/objectives_warning_small",
	data_template = "WonderObjectiveTemplate",
	data_template_secondary = "WonderObjectiveTemplate",
	priority = OT_Primary,
	parent = 0,
	telemetry = "destroyWonderObj",
	alert = "icons\\event_queue_high_priority_large",
}
AGS_OBJECTIVE_REGICIDE = {
	reason = AGS_WR_REGICIDE,
	-- Your King must survive.
	title = "$11218487", 
	description = Loc_Empty,
	icon = "icons\\objectives\\objectives_leader",
	data_template = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "regicideObj",
	alert = "icons\\event_queue_high_priority_large",
}
AGS_OBJECTIVE_TEAMSOLIDARITY = {
	reason = AGS_WR_TEAM_SOLIDARITY,
	-- Protect your teammates.
	title = "$64c5019a145c4e4da448dbd3adeea61e:230", 
	description = Loc_Empty,
	icon = "icons\\objectives\\objectives_leader",
	data_template = DT_PRIMARY_DEFAULT,
	priority = OT_Primary,
	parent = 0,
	telemetry = "teamsolidarityObj",
	alert = "icons\\event_queue_high_priority_large",
}

-- "%1PLAYER_NAME% eliminated"
AGS_CUE_TITLE_ANNIHILATED_ID = 11159062
AGS_CUE_TITLE_ELIMINATED_ID = 11165820
AGS_CUE_TITLE_REGICIDED_ID = 11165820

-- "%1PLAYER_NAME% surrendered in solidarity with his teammate"
AGS_CUE_TITLE_TEAM_SOLIDARITY_ID = "$64c5019a145c4e4da448dbd3adeea61e:231"

-- "Enemy attacking Landmark"
AGS_CUE_TITLE_LANDMARK_A_SELF_ID = 11198265
-- "Enemy attacking %1PLAYER_NAME%'s Landmark"
AGS_CUE_TITLE_LANDMARK_A_TEAM_ID = 11198266
-- "Enemy destroyed Landmark"
AGS_CUE_TITLE_LANDMARK_K_SELF_ID = 11198267
-- "Enemy destroyed %1PLAYER_NAME%'s Landmark"
AGS_CUE_TITLE_LANDMARK_K_TEAM_ID = 11198268
-- "Destroyed %1PLAYER_NAME%'s landmark"
AGS_CUE_TITLE_LANDMARK_K_ENEMY_SELF_ID = 11198590
-- "Ally destroyed %1PLAYER_NAME%'s landmark"
AGS_CUE_TITLE_LANDMARK_K_ENEMY_TEAM_ID = 11198591
-- "Enemy destroyed %1PLAYER_NAME%'s landmark"
AGS_CUE_TITLE_LANDMARK_K_ENEMY_OTHER_ID = 11201826


-- "Enemy attacking Wonder"
AGS_CUE_TITLE_WONDER_A_SELF_ID = 11198265
-- "Enemy attackingÂ %1PLAYER_NAME%'s Wonder"
AGS_CUE_TITLE_WONDER_A_TEAM_ID = 11198637

-- "%1PLAYER_NAME% is building a Wonder"
AGS_CUE_TITLE_WONDER_BUILD_ALLY_ID = 11159074
-- "%1PLAYER_NAME% is building a Wonder"
AGS_CUE_TITLE_WONDER_BUILD_ENEMY_ID = 11159074

-- "Defend your Wonder"
AGS_CUE_TITLE_WONDER_SELF_ID = 11159071
-- "Defend %1PLAYER_NAME%'s Wonder"
AGS_CUE_TITLE_WONDER_TEAM_ID = 11159070
-- "Destroy %1PLAYER_NAME%'s Wonder"
AGS_CUE_TITLE_WONDER_ENEMY_ID = 11159069

---------------------------------------------------------------------------------------------------
-- Helpers:
---------------------------------------------------------------------------------------------------

function AGS_IsPrimaryObjective(reason)
	-- Conquest is always primary objective.
	if reason == AGS_WR_CONQUEST then
		return true
	end
	if reason == AGS_WR_RELIGIOUS then
		return not AGS_GLOBAL_SETTINGS.Conquest
	end
	if reason == AGS_WR_WONDER then
		return not AGS_GLOBAL_SETTINGS.Conquest and not AGS_GLOBAL_SETTINGS.Religious
	end
	
	return false
end


-- COUNTER_TimerDecreasing or COUNTER_CountUpTo
function AGS_SetObjective(objective, state, visibility, progress, counter, title)
	if objective == nil then
		AGS_Print("AGS: OBJECTIVE WAS NOT DEFINED!")
	end
	-- Current state of an objective.
	if state ~= nil then
		Obj_SetState(objective, state)
	end
	-- Is objective visible ?
	if visibility ~= nil then
		Obj_SetVisible(objective, visibility)
	end
	-- Is objective progress visible ?
	if progress ~= nil then
		Obj_SetProgressVisible(objective, progress)
	end
	-- How is progress displayed ?
	if counter ~= nil then
		Obj_SetCounterType(objective, counter)
	end
	-- Dynamic change of displayed title ?
	if title ~= nil then
		Obj_SetTitle(objective, title)
	end
end

function AGS_SetObjectivePopUp(objective_id, objective_data)
	-- Show big popup about this objective.
	if objective_data ~= nil then
		Obj_CreatePopup(objective_id, objective_data.title)
	end
end

function AGS_SetObjectiveProgress(objective, current_count, max_count, progress_percentage, timer)
	-- Current progress done.
	if current_count ~= nil then
		Obj_SetCounterCount(objective, current_count)
	end
	-- Maximum progress that can be done.
	if max_count ~= nil then
		Obj_SetCounterMax(objective, max_count)
	end
	-- Percentage completed.
	if progress_percentage ~= nil then
		Obj_SetProgress(objective, progress_percentage)
	end
	
	if timer ~= nil then
		Obj_SetCounterTimerSeconds(objective, timer)
	end
end



---------------------------------------------------------------------------------------------------
-- Visuals:
---------------------------------------------------------------------------------------------------


function AGS_FormatText(title_id, player_name)
	return Loc_FormatText(title_id, player_name)
end

function AGS_CreateCueComplex(cue_template, high_priority, title, color, sfx)
	if sfx == nil then
		sfx = cue_template.sfx
	end
	if high_priority then
		AGS_CreateCueCustomized(cue_template, title, color, cue_template.icon, ECV_Queue, sfx)
		AGS_CreateCueCustomized(cue_template, title, color, cue_template.icon_high_priority, ECV_Title, sfx)
	else
		AGS_CreateCueCustomized(cue_template, title, color, cue_template.icon, ECV_Queue, sfx)
	end
end


function AGS_CreateObjective(objective, player_id, player_civ, title_param, parent)
	local template = objective.data_template
	if AGS_IsPrimaryObjective(objective.reason) then
		template = objective.data_template_secondary
	end
	local title = objective.title
		if title_param ~= nil then
		title = AGS_FormatText(title, title_param)
	end
	
	if parent == nil then
		parent = objective.parent
	end
	
	return Obj_Create(
		player_id, -- Most likely always local player ?
		title,
		objective.description(), 	
		objective.icon, 
		template, 
		player_civ, 
		objective.priority, -- objective type e.g. primary or secondary
		parent, -- parent objective
		objective.telemetry
	)
end

-- os_state is OS_Complete/Incomplete/Failed
function AGS_SetEndGameState(objective, show_taskbar, os_state, music_sfx)
	Obj_SetState(objective, os_state)
	Obj_CreatePopup(objective, objective.title)	
end