---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
--
-- Description:
-- Alters players population limits.
---------------------------------------------------------------------------------------------------

AGS_POPULATION_CAPACITY_MODULE = "AGS_PopulationCapacity"

---------------------------------------------------------------------------------------------------
-- Delegates:
---------------------------------------------------------------------------------------------------

Core_RegisterModule(AGS_POPULATION_CAPACITY_MODULE)	

function AGS_PopulationCapacity_UpdateModuleSettings()
	if AGS_GLOBAL_SETTINGS.PopulationCapacity == 200 then
		Core_UnregisterModule(AGS_POPULATION_CAPACITY_MODULE)
	end
end

function AGS_PopulationCapacity_PresetPostSpawn()
	AGS_PopulationCapacity_Change(AGS_GLOBAL_SETTINGS.PopulationCapacity)
end

---------------------------------------------------------------------------------------------------
-- Functions:
---------------------------------------------------------------------------------------------------

function AGS_PopulationCapacity_Change(pop_size)
	for _, player in pairs(PLAYERS) do		
		local value =  - (200 - pop_size)	
		local player_civ = Player_GetRaceName(player.id)
		AGS_PopulationCapacity_SetMaxCapPopulation(player, value)
		if player_civ == AGS_CIV_MONGOL then
			AGS_PopulationCapacity_SetMaxPopulation(player, value)
		end	
	end
end

function AGS_PopulationCapacity_SetMaxPopulation(player, pop_size)
	Player_SetExactMaxPopulation(player.id, CT_Personnel, pop_size)
	--Player_SetExactMaxPopulation(player.id, CT_Vehicle, pop_size)
end

function AGS_PopulationCapacity_SetMaxCapPopulation(player, pop_size)
	Player_SetExactMaxCapPopulation(player.id, CT_Personnel, pop_size)
	--Player_SetExactMaxCapPopulation(player.id, CT_Vehicle, pop_size)
end

--? @shortdesc Sets the current personnel or vehicle cap for a player. The captype is either CT_Personnel or CT_Vehicle (you can't adjust Medic caps just yet).
--? @extdesc Note that any modifiers that adjust the current cap will be applied on top of this.  Also note, the current cap cannot go higher than the max cap.
--? @args PlayerID playerid, Integer captype, Integer newcap
--? @result Void
function Player_SetExactMaxPopulation(playerid, captype, value)	
	if scartype(playerid) ~= ST_PLAYER then fatal("Player_SetMaxPopulation: Invalid PlayerID") end
	local index = World_GetPlayerIndex(playerid)	
	if (captype == CT_Vehicle) then		
		if( _player_vehicle_cap == nil ) then	
			_player_vehicle_cap = {}
		else
			Modifier_Remove( _player_vehicle_cap[index] )
		end
		local modifier = Modifier_Create(MAT_Player, "vehicle_cap_player_modifier", MUT_Addition, false, value, "")
		_player_vehicle_cap[index] = Modifier_ApplyToPlayer( modifier, playerid, 0 )		
	elseif (captype == CT_Personnel) then		
		if( _player_personnel_cap == nil ) then	
			_player_personnel_cap = {}
		else
			Modifier_Remove( _player_personnel_cap[index] )
		end
		local modifier = Modifier_Create(MAT_Player, "personnel_cap_player_modifier", MUT_Addition, false, value, "")
		_player_personnel_cap[index] = Modifier_ApplyToPlayer( modifier, playerid, 0 )		
	else		
		fatal("Player_SetMaxPopulation: Invalid cap type")		
	end	
end

--? @shortdesc Sets the current personnel or vehicle max-cap for a player. The captype is either CT_Personnel or CT_Vehicle (you can't adjust Medic caps just yet).
--? @extdesc Note that any modifiers that adjust the current max cap will be applied on top of this.  Also note, this is only adjusting the max cap, not the current cap,
--? @extdesc you will have to call Player_SetMaxPopulation to adjust the current max population to do this.
--? @args PlayerID playerid, Integer captype, Integer newcap
--? @result Void
function Player_SetExactMaxCapPopulation(playerid, captype, value)
	if scartype(playerid) ~= ST_PLAYER then fatal("Player_SetMaxPopulation: Invalid PlayerID") end
	local index = World_GetPlayerIndex(playerid)	
	if (captype == CT_Vehicle) then		
		if( _player_vehicle_max_cap == nil ) then	
			_player_vehicle_max_cap = {}
		else
			Modifier_Remove( _player_vehicle_max_cap[index] )
		end
		local modifier = Modifier_Create(MAT_Player, "max_vehicle_cap_player_modifier", MUT_Addition, false, value, "")
		_player_vehicle_max_cap[index] = Modifier_ApplyToPlayer( modifier, playerid, 0 )		
	elseif (captype == CT_Personnel) then		
		if( _player_personnel_max_cap == nil ) then	
			_player_personnel_max_cap = {}
		else
			Modifier_Remove( _player_personnel_max_cap[index])
		end
		local modifier = Modifier_Create(MAT_Player, "max_personnel_cap_player_modifier", MUT_Addition, false, value, "")
		_player_personnel_max_cap[index] = Modifier_ApplyToPlayer( modifier, playerid, 0 )		
	else		
		fatal("Player_SetMaxCapPopulation: Invalid cap type")		
	end	
end