---------------------------------------------------------------------------------------------------
-- Authors:
-- Relic
-- Woprock
--
-- Description:
-- Alters all production and gathering rates.
---------------------------------------------------------------------------------------------------

AGS_GAME_RATES_MODULE = "AGS_GameRates"
AGS_GAME_RATES_MODIFIERS = { }

---------------------------------------------------------------------------------------------------
-- Delegates:
---------------------------------------------------------------------------------------------------

Core_RegisterModule(AGS_GAME_RATES_MODULE)	

function AGS_GameRates_UpdateModuleSettings()
	if AGS_GLOBAL_SETTINGS.GameRates == 1.00 then
		Core_UnregisterModule(AGS_GAME_RATES_MODULE)
	end
end

function AGS_GameRates_Preset()
	Rule_AddGlobalEvent(AGS_GameRates_ConstructionComplete, GE_ConstructionComplete)
	Rule_AddGlobalEvent(AGS_GameRates_Test1, GE_ConstructionComplete)
	Rule_AddGlobalEvent(AGS_GameRates_Test2, GE_BuildItemComplete)
	Rule_AddGlobalEvent(AGS_GameRates_Test3, GE_AbilityComplete)
	Rule_AddGlobalEvent(AGS_GameRates_Test4, GE_SquadSpawn)
	Rule_AddGlobalEvent(AGS_GameRates_Test5, GE_EntitySpawn)
end

function AGS_GameRates_Start()
	AGS_GameRates_ChangeGameRates()
end

function AGS_GameRates_OnGameOver()
	Rule_RemoveGlobalEvent(AGS_GameRates_ConstructionComplete)
end

---------------------------------------------------------------------------------------------------
-- Functions:
function AGS_GameRates_Test1(context)
	Util_PrintObject("Test1", 10)
	Util_PrintObject(context, 10)
end
function AGS_GameRates_Test2(context)
	Util_PrintObject("Test2", 10)
	Util_PrintObject(context, 10)
end
function AGS_GameRates_Test3(context)
	Util_PrintObject("Test3", 10)
	Util_PrintObject(context, 10)
end
function AGS_GameRates_Test4(context)
	Util_PrintObject("Test4", 10)
	Util_PrintObject(context, 10)
end
function AGS_GameRates_Test(context)
	Util_PrintObject("Test5", 10)
	Util_PrintObject(context, 10)
end
	
---------------------------------------------------------------------------------------------------
-- Apply function.
function AGS_GameRates_ApplyModifier(player_id, modifier_ebp, modifier_type, modifier_value)
	Modifier_ApplyToPlayer(Modifier_Create(MAT_EntityType, modifier_type, MUT_Multiplication, false, modifier_value, modifier_ebp), player_id, 0.0)
end	

function AGS_GameRates_ConstructionComplete(context)
	if context == nil or context.entity == nil then
		return
	end
	local ebp = Entity_GetBlueprint(context.entity)
	if ebp == nil then 
		return 
	end
	
	Util_PrintObject(ebp, 10)
	if AGS_GAME_RATES_MODIFIERS[ebp.id] ~= nil then
		return
	end
	AGS_GAME_RATES_MODIFIERS[ebp.id] = ebp
	for _, player in pairs(PLAYERS) do			
		AGS_GameRates_ApplyModifier(player.id, ebp, "production_speed_modifier", AGS_GLOBAL_SETTINGS.GameRates)
		AGS_GameRates_ApplyModifier(player.id, ebp, "cost_ticks_modifier", 1/AGS_GLOBAL_SETTINGS.GameRates)
		AGS_GameRates_ApplyModifier(player.id, ebp, "speed_maximum_modifier", AGS_GLOBAL_SETTINGS.GameRates)
	end
end

function AGS_GameRates_ChangeGameRates()
	-- Apply new modifiers.
	for _, player in pairs(PLAYERS) do				
		local villager_ebp = Cardinal_ConvertTypeToEntityBlueprint(AGS_BP_VILLAGER, player.id)		
		AGS_GameRates_ApplyModifier(player.id, villager_ebp, "resource_entity_harvest_rate_food", AGS_GLOBAL_SETTINGS.GameRates)
		AGS_GameRates_ApplyModifier(player.id, villager_ebp, "resource_entity_harvest_rate_wood", AGS_GLOBAL_SETTINGS.GameRates)
		AGS_GameRates_ApplyModifier(player.id, villager_ebp, "resource_entity_harvest_rate_gold", AGS_GLOBAL_SETTINGS.GameRates)
		AGS_GameRates_ApplyModifier(player.id, villager_ebp, "resource_entity_harvest_rate_stone", AGS_GLOBAL_SETTINGS.GameRates)
		AGS_GameRates_ApplyModifier(player.id, villager_ebp, "construction_rate", AGS_GLOBAL_SETTINGS.GameRates)
		AGS_GameRates_ApplyModifier(player.id, villager_ebp, "repair_rate_modifier", AGS_GLOBAL_SETTINGS.GameRates)
		--AGS_GameRates_ApplyModifier(player.id, villager_ebp, "speed_maximum_modifier", AGS_GLOBAL_SETTINGS.GameRates)
	end
end