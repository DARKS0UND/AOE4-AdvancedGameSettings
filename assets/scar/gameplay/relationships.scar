-----------------------------------------------------------------------
--
-- Player relationships system derived from Relic code.
--
-----------------------------------------------------------------------

-----------------------------------------------------------------------
-- Scripting framework 
-----------------------------------------------------------------------

Core_RegisterModule("Relationships")

-----------------------------------------------------------------------
-- Callbacks
-----------------------------------------------------------------------

-- Callback invoked (normally from the the OnInit() function of the game mode script) to indicate whether diplomacy is enabled.  
-- Callback invoked to indicate whether changing of relations is disabled (as a match option).
-- Invoked through game mode script's *_OnIntit() function. 
-- This callback is intended for disabling relations as a match option - use Relationships_OverrideSettings() to otherwise customize relations behaviour.    
function Relationships_RelationshipsEnabled(is_enabled)			
	if not _relationships then 	
		_relationships = {
			is_relationships_enabled = is_enabled,			-- Whether the local player meets the requirements to change relationships, by default its same as is_enabled
			is_relationships_changeable = is_enabled,												-- lets see if relic did finish this part for true = dynamic diplomacy, false = locked teams
			is_ui_created = false,								-- By default no UI exists.
			is_in_progress = false,								-- used to calculate data_context.is_relationships_enabled		
			
			data_context = {
				is_ui_visible = true,										
				is_ui_expanded = false,		
				command = {
					toggle_ui = UI_CreateCommand("Relationships_ToggleRelationshipsUI"),
				},
				players = {},		-- list of all players in the game		
			},	
			relations = {
				{ relation_type = R_ALLY,    image = "pack://application:,,,/WPFGUI;component/icons/common/orders/rally.png", help = "$64c5019a145c4e4da448dbd3adeea61e:123" },
				{ relation_type = R_NEUTRAL, image = "pack://application:,,,/WPFGUI;component/icons/races/common/buildings/market.png", help = "$64c5019a145c4e4da448dbd3adeea61e:124" },
				{ relation_type = R_ENEMY,   image = "pack://application:,,,/WPFGUI;component/icons/races/common/buildings/barracks.png", help = "$64c5019a145c4e4da448dbd3adeea61e:125" },
			},
			cue = {							-- Event cue template (shown when player changes relationship or receives tribute) 
				lifetime = 10.0,
				repeatTime = 20.0,
				title = Loc_Empty(),
				desc = Loc_Empty(),
				sfx = "sfx_ui_tribute_received_play",
				icon = "",
				color = {r = 255, g = 255, b = 255, a = 255},
				template = "low_priority", 
				style = ECV_Queue,
			},
			age = {						-- Loc_string lookup table (indexed by age)
				Loc_GetString(11180928),					-- I
				Loc_GetString(11180929),					-- II
				Loc_GetString(11180930),					-- III
				Loc_GetString(11180931),					-- IV
			},
		}
		Relationships_CreateDataContext()
	end
end


-- Callback invoked when relationship changes			
--TODO: Make this a global event (GE_RelationChanged) triggered by code.  
function Relationships_OnRelationshipChanged(observerPlayerID, targetPlayerID, show_notification)
	if _relationships ~= nil then 	
		-- Show event cue
		if show_notification ~= false then
			local targetPlayer = Core_GetPlayersTableEntry(targetPlayerID)
			local relation = Player_ObserveRelationship(observerPlayerID, targetPlayerID)			
			local observerPlayer = Core_GetPlayersTableEntry(observerPlayerID)
			local targetPlayerName = Player_GetDisplayName(targetPlayer.id)
			local observerPlayerName = Player_GetDisplayName(observerPlayer.id)
			local cue = _relationships.cue	
			if targetPlayer.isLocal then			
				local text = Loc_FormatText(11161246, observerPlayerName)	-- "%1PLAYER_NAME% is now neutral"	
				if relation == R_ALLY then
					text = Loc_FormatText(11161247, observerPlayerName)	-- "%1PLAYER_NAME% is now friendly"
				elseif relation == R_ENEMY then
					text = Loc_FormatText(11161248, observerPlayerName)	-- "%1PLAYER_NAME% is now hostile"
				end
				UI_CreateEventCueClickable(-1, cue.lifetime, 0, cue.repeatTime, text, cue.desc, cue.template, cue.icon, cue.sfx, cue.color.r, cue.color.g, cue.color.b, cue.color.a, cue.style, nothing)
			else
				local text = Loc_FormatText("$64c5019a145c4e4da448dbd3adeea61e:129", observerPlayerName, targetPlayerName) -- neutrality
				if relation == R_ALLY then
					text = Loc_FormatText("$64c5019a145c4e4da448dbd3adeea61e:128", observerPlayerName, targetPlayerName)   -- friendship
				elseif relation == R_ENEMY then
					text = Loc_FormatText("$64c5019a145c4e4da448dbd3adeea61e:130", observerPlayerName, targetPlayerName)   -- hostility
				end
				UI_CreateEventCueClickable(-1, cue.lifetime, 0, cue.repeatTime, text, cue.desc, cue.template, cue.icon, cue.sfx, cue.color.r, cue.color.g, cue.color.b, cue.color.a, cue.style, nothing)				
			end
		end
		
		-- Update data context
		local localPlayer = Core_GetPlayersTableEntry(Game_GetLocalPlayer())	
		if localPlayer.id == observerPlayerID or localPlayer.id == targetPlayerID then 
			Relationships_UpdatePlayerColours()
			Relationships_UpdateDataContext()
			Relationships_UpdateUI()
		end			
	end
end

-----------------------------------------------------------------------
-- Network functions
-----------------------------------------------------------------------

-- Global event callback for GE_PlayerTeamIdUpdated
-- Enables/Disables buttons for diplomacy based on context change whenever player moves into another team.
function Relationships_OnPlayerTeamChanged(player, resources)	
	Relationships_UpdateDataContext()
end

-- Callback invoked by Relation buttons
function Relationships_ChangeRelation(parameter)
	Network_CallEvent("Relationships_ChangeRelationNtw", parameter)
end

function Relationships_ChangeRelationNtw(playerID, data)  

	-- Expected format of data parameter is: from playerID -> observerPlayerID, from data -> targetPlayerID, relationAsAnInt
	local parts = string.split(data)
	local observerPlayer = Core_GetPlayersTableEntry(playerID)
 	local targetPlayer = Core_GetPlayersTableEntryFromIndex(tonumber(parts[1]))
	local relation = Relationships_RelationConverter(tonumber(parts[2]))
	
	-- if different change
	if Player_ObserveRelationship(playerID, targetPlayer.id) ~= relation then 
		Player_SetRelationship(playerID, targetPlayer.id, relation)								
		Core_CallDelegateFunctions("OnRelationshipChanged", playerID, targetPlayer.id)		-- HACK: Player_SetRelationship() needs to trigger a global event (GE_RelationChanged)
	end
end

-----------------------------------------------------------------------
-- UI functions
-----------------------------------------------------------------------

function Relationships_UpdateRelationContext(context_player)
	-- find local player for button enabling	
	local player_local = Core_GetPlayersTableEntry(Game_GetLocalPlayer())
	-- Apply
	context_player.name.tooltip = Relationships_RelationToTooltipConverter(context_player, player_local)
	context_player.relationshipTooltip = Relationships_RelationToTooltipConverter(player_local, context_player)
	context_player.is_ally = Player_ObserveRelationship(context_player.id, player_local.id) == R_ALLY
	context_player.is_neutral = Player_ObserveRelationship(context_player.id, player_local.id) == R_NEUTRAL
	context_player.is_enemy = Player_ObserveRelationship(context_player.id, player_local.id) == R_ENEMY	
end

-- Update team from player (PLAYERS) to local copy of context_player
function Relationships_UpdateTeam(context_player)
	local player = Core_GetPlayersTableEntryFromIndex(context_player.index)
	if player ~= nil then 
		context_player.team.number = player.team.index
		context_player.team.name = Relationships_FormatTeamNumber(player.team.index) -- everyone is always member of a team
	end			
end

-- Updates all data related to UI state (enabled, visibility, etc)
function Relationships_UpdateDataContext()
	
	if _relationships == nil then -- leave if there is no context yet.
		return
	end	
		
	-- Individual players needs their button configured on update of DC
	for i, context_player in pairs(_relationships.data_context.players) do
		
		-- Is this player visible in UI ? Always yes basically as we dont do anything with it.
		context_player.is_visible = true 
		-- Relationships can be changed only to other players, so its always true for not local player, for local it must be false
		context_player.is_relationships_visible = not context_player.is_local
		-- Update context that player has for each relation.
		Relationships_UpdateTeam(context_player)
		Relationships_UpdateRelationContext(context_player)
		
		-- Individual relations button are handled here.
		for j, relation in pairs(context_player.relations) do
			if context_player.is_eliminated or not _relationships.is_relationships_visible then --if eliminated or inactive due to other scripts we dont enable buttons
				relation.is_enabled = false
				relation.tooltip.requirements = Loc_GetString(11165016) -- target is eliminated, buttons are inactive
			else
				relation.is_enabled = _relationships.is_enabled and Player_ObserveRelationship(player_local.id, context_player.id) ~= relation.relation_type -- only 2 out of 3 can be clickable at any moment
				relation.tooltip.requirements = Loc_Empty()
			end
			
			-- HACK: Converts true/false to opacity values for enabled/disabled state of relation buttons
			if relation.is_enabled then 
				relation.opacity = 1.0
			else 
				relation.opacity = 0.44
			end
		end
	end	
	Relationships_UpdateUI()
end

-- Returns the relation (R_ALLY, R_ENEMY, R_NEUTRAL) of observer vs target as a tooltip.	 
function Relationships_RelationToTooltipConverter(observer, target)
	local relation = Player_ObserveRelationship(observer.id, target.id)
	if observer.isLocal then 
		if relation ==  R_ALLY then 
			return Loc_FormatText(11161249, Player_GetDisplayName(target.id))				-- "You are friendly to %1PLAYER_NAME%"
		elseif relation == R_ENEMY then 
			return Loc_FormatText(11161253, Player_GetDisplayName(target.id))				-- "You are hostile to %1PLAYER_NAME%"
		else
			return Loc_FormatText(11161254, Player_GetDisplayName(target.id))				-- "You are neutral to %1PLAYER_NAME%"
		end	
	elseif target.isLocal then 
		if relation ==  R_ALLY then 
			return Loc_FormatText(11161255, Player_GetDisplayName(observer.id))				-- "%1PLAYER_NAME% is friendly to you"
		elseif relation == R_ENEMY then 
			return Loc_FormatText(11161256, Player_GetDisplayName(observer.id))				-- "%1PLAYER_NAME% is hostile to you"
		else
			return Loc_FormatText(11161257, Player_GetDisplayName(observer.id))				-- "%1PLAYER_NAME% is neutral  to you"
		end					
	end
	return Loc_Empty()
end

-- Converts relation to integer and integer to relation  
function Relationships_RelationConverter(relation)	
	if scartype(relation) == ST_NUMBER then
		if relation == 1 then 
			return R_ENEMY
		elseif relation == 2 then 
			return R_ALLY
		elseif relation == 3 then 
			return R_NEUTRAL
		end
	else
		if relation == R_ENEMY then 
			return 1
		elseif relation == R_ALLY then 
			return 2
		elseif relation == R_NEUTRAL then
			return 3
		end
	end
end

function Relationships_CreateDataContext()
	
	local CreatePlayerDataContext = function(player)
		local player_local = Core_GetPlayersTableEntry(Game_GetLocalPlayer())
		local context_player = { 	
				id = player.id,
				player_index = player.index,
				is_local = player.isLocal,
				is_eliminated = player.isEliminated,
				name = {
					text = Player_GetDisplayName(player.id).LocString,
					color = UI_GetColourAsString(Player_GetUIColour(player.id)),
					tooltip = Relationships_RelationToTooltipConverter(player, player_local),
					age = _relationships.age[Player_GetCurrentAge(player.id)],
					civ_flag = string.format("pack://application:,,,/WPFGUI;component/%s.png", string.gsub(World_GetRaceIcon(Player_GetRace(player.id)), "\\", "/" )),
				},			
				team = {
					number = player.team.index,
					name = Relationships_FormatTeamNumber(player.team.index) -- everyone is always member of a team
				},
				is_visible = true,						
				is_relationships_visible = not player.isLocal,	-- enable UI for changing relations		
				relationshipTooltip = Relationships_RelationToTooltipConverter(player_local, player),
				is_ally = Player_ObserveRelationship(player.id, player_local.id) == R_ALLY,
				is_neutral = Player_ObserveRelationship(player.id, player_local.id) == R_NEUTRAL,
				is_enemy = Player_ObserveRelationship(player.id, player_local.id) == R_ENEMY,
				relations = {},		-- list of all relation buttons	
		}
			
		-- for each defined relation state follow creation of button command for selected player
		for j, relation in ipairs(_relationships.relations) do
			table.insert(context_player.relations, {
				relation_type = relation.relation_type, -- save type
				relationGroup = string.format("group%d", player.index),					
				imageSource = relation.image,
				-- we are using pure buttons for now, who would want to deal with anything else... within mod
				is_enabled = _relationships.is_enabled and Player_ObserveRelationship(player_local.id, player.id) ~= relation.relation_type, 
				relationshipsClickedCommand = UI_CreateCommand("Relationships_ChangeRelation"),
				relationshipsRightClickedCommand = UI_CreateCommand("Relationships_ChangeRelation"),
				relationshipsClickedParameter = string.format("%d,%d", player.index, Relationships_RelationConverter(relation.relation_type)),
				tooltip = {
					help = Loc_FormatText(relation.help, Player_GetDisplayName(player.id)),
					requirements = Loc_Empty(),	
				},
				opacity = 1.0,
			})
		end
		
		return context_player
	end
	
	-- Add local player to data context first so it appears at the top of the list. 
	-- This clearly does not work once teams are established
	
	local player_local = Core_GetPlayersTableEntry(Game_GetLocalPlayer())	
	table.insert(_relationships.data_context.players, CreatePlayerDataContext(player_local))
	
	for _, player in ipairs(PLAYERS) do		
		if not player.isLocal then 
			table.insert(_relationships.data_context.players, CreatePlayerDataContext(player))
		end
	end		
	Relationships_SortDataContext()		
end


------------------------------------------------------------------------------------------------
-- BORING CALLBACKS DOWN HERE
------------------------------------------------------------------------------------------------


-- Callback invoked by Core_SetPlayerDefeated() when a player is eliminated.
function Relationships_OnPlayerDefeated(player, reason)
	if _relationships ~= nil and player ~= nil then 
		if player.isLocal and player.isEliminated then
			Relationships_ShowUI(false)
		else
			for i, context_player in pairs(_relationships.data_context.players) do
				if context_player.player_index == player.index then
					context_player.is_eliminated = true
					context_player.name.color = UI_GetColourAsString(Player_GetUIColour(player.id))
					for j, relation in pairs(context_player.relations) do
						relation.is_enabled = false -- disable ability to change relation with eliminated players
					end
				end
			end			
			Relationships_UpdateDataContext()
		end
	end
end

-- Callback invoked by Core::OnInit()
function Relationships_OnInit()		
	Rule_AddGlobalEvent(Relationships_OnUpgradeComplete, GE_UpgradeComplete)	
	Rule_AddGlobalEvent(Relationships_OnPlayerNameChanged, GE_PlayerNameChanged)
	
	if _relationships ~= nil then 
		Network_RegisterEvent("Relationships_ChangeRelationNtw")
		
		-- Initial age
		Relationships_UpdatePlayerAges()
		
		Relationships_UpdateDataContext()
		Relationships_CreateUI()

		Relationships_ToggleRelationshipsUI()
		Rule_AddOneShot(Relationships_ToggleRelationshipsUI)
	end
end

function Relationships_UpdatePlayerNames()
	for _, context_player in pairs(_relationships.data_context.players) do	
		local player = Core_GetPlayersTableEntryFromIndex(context_player.player_index)
		context_player.name.text = Player_GetDisplayName(player.id).LocString
	end	
end

function Relationships_UpdatePlayerColours()
	for i, context_player in pairs(_relationships.data_context.players) do
		for _, player in ipairs(PLAYERS) do
			if context_player.player_index == player.index then
				context_player.name.color = UI_GetColourAsString(Player_GetUIColour(player.id))
				break
			end
		end
	end
end

function Relationships_UpdatePlayerAges()
	for _, context_player in pairs(_relationships.data_context.players) do				
		local player = Core_GetPlayersTableEntryFromIndex(context_player.player_index)			
		local age = Player_GetCurrentAge(player.id)
		context_player.name.age = _relationships.age[age]															
	end	
end

-- Global event callback for GE_UpgradeComplete
function Relationships_OnUpgradeComplete(context)
	if _relationships ~= nil and BP_IsUpgradeOfType(context.upgrade, "wonder_age_upgrade") then
		Relationships_UpdatePlayerAges()
		Relationships_UpdateUI()
	end
end

-- No team is transformed to -, but its still a number
function Relationships_FormatTeamNumber(team_number)	
	if team_number > 10000 then 
		return "-"
	end
	return tostring(team_number)
end

--  Global event callback for GE_PlayerNameChanged
function Relationships_OnPlayerNameChanged(context)
	if _relationships ~= nil then 
		Relationships_UpdatePlayerNames()	
		Relationships_UpdateDataContext()
	end
end

-- Sort player list by team number and player name if teams are locked.
function Relationships_SortDataContext()	
	if not _relationships.is_relationships_enabled then
		local SortTeamsAndPlayers = function(a, b)
			if a.team.number == b.team.number then 				
				return a.name.text < b.name.text
			end
			return a.team.number < b.team.number 
		end
		table.sort(_relationships.data_context.players, SortTeamsAndPlayers)
	end
end

function Relationships_UpdateNameColours()
	if _relationships == nil then 
		return
	end
	
	Relationships_UpdatePlayerColours()
end

function Relationships_CreateUI()
	
	if not _relationships.is_ui_created then 
	
		PlayerColour_SetConfigChangedCallback(Relationships_UpdateNameColours)
		
		local Xaml = 
[[<Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
		xmlns:esControls="clr-namespace:WPFGUI.Shared.Controls;assembly=EngineUI"
		xmlns:esUtility="clr-namespace:WPFGUI.Shared.Utility;assembly=EngineUI"
		xmlns:wm="clr-namespace:WPFGUI.Shared.MarkupExtensions;assembly=EngineUI"
		HorizontalAlignment="Right" 
		VerticalAlignment="Top" 
		SnapsToDevicePixels="True"
		Margin="0,10,13,0"
		Visibility="{Binding [is_ui_visible], Converter={StaticResource BoolToVis}}">
	<Grid.Resources>
		<ResourceDictionary.MergedDictionaries>
			<ResourceDictionary Source="pack://application:,,,ui/Resources/HUDResources.xaml" />
		</ResourceDictionary.MergedDictionaries>	
		<!-- Tooltip style -->
		<Style x:Key="RelationshipsToolTipStyle" TargetType="{x:Type ToolTip}">
            <Setter Property="HasDropShadow" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolTip}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>	
		<!-- Resource button style - a clone of HUDBaseButtonStyle but IsEnabled setter changes Opacity instead of Visibility of background -->
		<Style x:Key="RelationButtonStyle" TargetType="Button">
	        <Setter Property="SnapsToDevicePixels" Value="true" />
	        <Setter Property="OverridesDefaultStyle" Value="true" />
	        <Setter Property="HorizontalAlignment" Value="Left" />
	        <Setter Property="Width" Value="47" />
	        <Setter Property="Height" Value="47" />
			<Setter Property="esUtility:AudioAttachedProperty.PreviewMouseLeftButtonUpSound"
	                Value="sfx_ui_hud_inGame_button_play" />
	        <Setter Property="Template">
	            <Setter.Value>
	                <ControlTemplate TargetType="Button">
	                    <Border Name="RelationshipsButton">
	                        <Grid>
								<Border Background="{DynamicResource TertiaryColorLightBrush}">
									<Border>
										<Border.Background>
											<RadialGradientBrush Center="0.5,0" GradientOrigin="0.5,0" RadiusX="0.7" RadiusY="0.6">
										        <GradientStop Offset="0" Color="{DynamicResource TertiaryColorExtraLight}" />
										        <GradientStop Offset="1" Color="{DynamicResource TertiaryColorExtraLightTransparent}" />
										    </RadialGradientBrush>
										</Border.Background>
									</Border>
                                </Border>
								
	                            <Rectangle Name="Base" Fill="#33505050" />
	                            
								<Rectangle Name="Rollover" Fill="{StaticResource ButtonHighlightBrush}" Visibility="Collapsed" />
	                            
								<Rectangle Name="Highlight" Fill="#FF93BED7" Visibility="Collapsed" />
								
	                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
	                        </Grid>
	                    </Border>
	                    <ControlTemplate.Triggers>
	                        <Trigger Property="IsMouseOver" Value="true">
	                            <Setter TargetName="Rollover" Property="Visibility" Value="Visible" />
	                        </Trigger>
	                        <Trigger Property="IsPressed" Value="true">
	                            <Setter TargetName="Highlight" Property="Visibility" Value="Visible" />
	                        </Trigger>
	                        <Trigger Property="IsEnabled" Value="false">
								 <Setter TargetName="RelationshipsButton" Property="Opacity" Value="{StaticResource ButtonDisabledOpacity}" />
	                        </Trigger>
	                    </ControlTemplate.Triggers>
	                </ControlTemplate>
	            </Setter.Value>
	        </Setter>
	    </Style>		
		<Style x:Key="RelationshipsHorizontalSeparatorStyle" TargetType="Rectangle">
            <Setter Property="Fill" Value="#616C8C"/>
            <Setter Property="Height" Value="1.2"/>
            <Setter Property="Margin" Value="0,2"/>
        </Style>		
		<Style x:Key="RelationshipsVerticalSeparatorStyle" TargetType="Rectangle">
            <Setter Property="Effect" Value="{StaticResource DiplomacyTextDropShadow}" />
            <Setter Property="Fill" Value="{DynamicResource Gray80Brush}" />
            <Setter Property="Margin" Value="8,0" />
            <Setter Property="Width" Value="1.2" />
        </Style>
	</Grid.Resources>

	<Grid.RowDefinitions>
	    <RowDefinition Height="Auto" />
	    <RowDefinition Height="*" />
	</Grid.RowDefinitions>
	
	<!-- Relationships button -->	
	<Button Grid.Row="0"
            Margin="0,0,0,2" HorizontalAlignment="Right"
            VerticalAlignment="Top" Panel.ZIndex="2"
            esControls:TagAdorner.AlignmentMode="Relative"
            esControls:TagAdorner.ArrowDataTemplate="{StaticResource hudPage:TagArrowDataTemplate}"
            esControls:TagAdorner.DataTemplate="{StaticResource TagDataTemplate}"
            esControls:TagAdorner.HorizontalAnchor="Right" esControls:TagAdorner.HorizontalPlacement="Left"
            esControls:TagAdorner.TargetDataTemplate="{StaticResource hudPage:EmptyTagDataTemplate}"
            esControls:TagAdorner.VerticalAnchor="Top" esControls:TagAdorner.VerticalPlacement="Bottom"
			Style="{StaticResource DiplomacyButtonStyle}"
            Command="{Binding [command][toggle_ui]}"
            ToolTipService.InitialShowDelay="0" ToolTipService.ShowDuration="86400000">  
        <Button.ToolTip>
            <ToolTip MaxWidth="300"
                     Placement="Bottom"
                     Style="{StaticResource RelationshipsToolTipStyle}"
                     VerticalOffset="6">
                <ContentControl Style="{StaticResource HUDTooltipBorderStyle}">
                    <TextBlock Style="{StaticResource HUDGray80BodyTextBlock14ptStyle}"
                               Text="{esUtility:LocString $64c5019a145c4e4da448dbd3adeea61e:122}"
                               TextWrapping="Wrap" />
                </ContentControl>
            </ToolTip>
        </Button.ToolTip>
        <esControls:TagAdorner.IsTagged>
            <MultiBinding Converter="{StaticResource IsTaggedConverter}" ConverterParameter="DiplomacyButton">
                <Binding Path="TagVersion" Source="{x:Static model:HUDModel.Instance}" />
            </MultiBinding>
        </esControls:TagAdorner.IsTagged>
        <esControls:TagAdorner.Data>
            <MultiBinding Converter="{StaticResource TagDataConverter}" ConverterParameter="DiplomacyButton">
                <Binding Path="TagVersion" Source="{x:Static model:HUDModel.Instance}" />
            </MultiBinding>
        </esControls:TagAdorner.Data>
    </Button>
	
	<!-- Diplomacy panel -->
	<Grid Grid.Row="1"
		  Panel.ZIndex="1"
		  Visibility="{Binding [is_ui_expanded], Converter={StaticResource BoolToVis}}">
		<ContentControl Template="{StaticResource CanvasTertiaryVerticalGradientBackgroundBox}">
            <ContentControl Template="{StaticResource TexturedTertiaryThickDoubleBorders}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<!-- player list area -->
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" Margin="0,0,0,3">
	                    <Grid.ColumnDefinitions>
	                        <ColumnDefinition MaxWidth="315" />
	                        <ColumnDefinition Width="150" />
	                        <ColumnDefinition Width="200" />
	                    </Grid.ColumnDefinitions>				
						<!--  Header labels  -->
	                    <esControls:Marquee Grid.Row="0" Grid.Column="0">
							<!-- "PLAYER" -->
	                        <TextBlock Style="{StaticResource HUDPrimaryColorGradientVerticalSubtitleTextBlock14ptStyle}"
	                                   Text="{esUtility:LocString $11164878}" /> 
	                    </esControls:Marquee>	
	                    <Grid Grid.Row="0" Grid.Column="1">
	                        <Grid.ColumnDefinitions>
	                            <ColumnDefinition Width="*" />
	                            <ColumnDefinition Width="Auto" />
	                            <ColumnDefinition Width="*" />
	                        </Grid.ColumnDefinitions>
	                        <esControls:Marquee Grid.Column="1"
	                                                      MarqueeType="Alternate" Speed="60">
								<!-- "TEAM" -->
	                            <TextBlock Margin="4,0" HorizontalAlignment="Center"
	                                       Style="{StaticResource HUDPrimaryColorGradientVerticalSubtitleTextBlock14ptStyle}"
	                                       Text="{esUtility:LocString $11164879}" />
	                        </esControls:Marquee>
	                    </Grid>	
	                    <Grid Grid.Row="0" Grid.Column="2">
	                        <Grid.ColumnDefinitions>
	                            <ColumnDefinition Width="*" />
	                            <ColumnDefinition Width="Auto" />
	                            <ColumnDefinition Width="*" />
	                        </Grid.ColumnDefinitions>	
	                        <esControls:Marquee Grid.Column="1"
	                                                      MarqueeType="Alternate" Speed="60">
								<!-- "RELATIONS" -->
	                            <TextBlock HorizontalAlignment="Center"
	                                       Style="{StaticResource HUDPrimaryColorGradientVerticalSubtitleTextBlock14ptStyle}"
	                                       Text="{esUtility:LocString $64c5019a145c4e4da448dbd3adeea61e:112}" />
	                        </esControls:Marquee>
	                    </Grid>
					</Grid>
					
					<Rectangle Grid.Row="1"
                               Style="{StaticResource RelationshipsHorizontalSeparatorStyle}" />

					<!-- Player list -->
					<ItemsControl Grid.Row="2" ItemsSource="{Binding [players]}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>								
								<Grid Visibility="{Binding [is_visible], Converter={StaticResource BoolToVis}}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="315" />
										<ColumnDefinition Width="150" />   
										<ColumnDefinition Width="200" />
									</Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
									
									<!-- Player name & details -->
									<Grid Grid.Column="0" VerticalAlignment="Center" Margin="0,2,0,4">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										
										<TextBlock Grid.ColumnSpan="3" Margin="0,0,0,1"
                                                   Foreground="{Binding [name][color]}"
                                                   Text="{Binding [name][text]}" >
											<TextBlock.Style>
												<Style BasedOn="{StaticResource HUDDiplomacyPlayerNameTextBlockStyle}" TargetType="TextBlock">
													<Style.Triggers>
														<DataTrigger Binding="{Binding [is_eliminated]}" Value="true">
															<Setter Property="TextDecorations" Value="Strikethrough" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</TextBlock.Style>
										</TextBlock>

                                        <Image Grid.Row="1" Grid.Column="0"
                                               Height="14" Margin="0,0,3,0"
                                               VerticalAlignment="Center"
                                               Effect="{StaticResource DropShadowTextStyle}"
                                               Source="{Binding [name][civ_flag]}" />

                                        <Rectangle Grid.Row="1" Grid.Column="1"
                                                   Style="{StaticResource RelationshipsVerticalSeparatorStyle}" />

                                        <TextBlock Grid.Row="1" Grid.Column="2" Margin="2,0,0,0"
                                                   Style="{StaticResource HUDDiplomacyAgeSubTitleTextBlockStyle}"
                                                   Text="{Binding [name][age]}" HorizontalAlignment="Left"
												   ToolTip="{Binding [name][tooltip]}"/>
									</Grid>
									
									<!-- Team -->
									<Grid Grid.Column="1">
										<Border Width="24"
                                                Height="24"
                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                BorderBrush="Lime"
                                                BorderThickness="1"
                                                Visibility="{Binding [is_ally], Converter={StaticResource BoolToVis}}" />
										<Border Width="24"
                                                Height="24"
                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                BorderBrush="Linen"
                                                BorderThickness="1"
                                                Visibility="{Binding [is_neutral], Converter={StaticResource BoolToVis}}" />
										<Border Width="24"
                                                Height="24"
                                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                                BorderBrush="Red"
                                                BorderThickness="1"
                                                Visibility="{Binding [is_enemy], Converter={StaticResource BoolToVis}}" />

                                        <TextBlock Margin="0,2,0,0" HorizontalAlignment="Center"
                                                   Style="{StaticResource HUDDiplomacyTeamTextBlockStyle}"
                                                   Text="{Binding [team][name]}" 
												   ToolTip="{Binding [relationshipTooltip]}"/>
									</Grid>
									
									<!-- Relations set buttons -->
									<ItemsControl Grid.Column="2" 
												  VerticalAlignment="Center" HorizontalAlignment="Right"
												  ItemsSource="{Binding [relationships]}"
												  Visibility="{Binding [is_relationships_visible], Converter={StaticResource BoolToVis}}" >
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<esControls:SpacedStackPanel Orientation="Horizontal" Spacing="3" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
										<ItemsControl.ItemTemplate>
											<DataTemplate>           
												<Button Command="{Binding [relationshipsClickedCommand]}"
														CommandParameter="{Binding [relationshipsClickedParameter]}"
														esControls:ButtonHelper.RightClickCommand="{Binding [relationshipsRightClickedCommand]}"
														esControls:ButtonHelper.CommandParameter="{Binding [relationshipsClickedParameter]}"
														ToolTipService.InitialShowDelay="0"
                                            			ToolTipService.ShowDuration="86400000"
														ToolTipService.ShowOnDisabled="True"													
														IsEnabled="{Binding [is_enabled]}"						
														Style="{StaticResource RelationButtonStyle}">
													<Button.Content>
														<Grid>
															<Image Source="{Binding [imageSource]}"
																   Opacity="{Binding [opacity]}" Width="32">
																<Image.Effect>
																	<DropShadowEffect BlurRadius="6" Direction="-71.5"
												                                      Opacity="0.6" ShadowDepth="3"
												                                      Color="Black" />
																</Image.Effect>
															</Image>
														</Grid>
													</Button.Content>
													<!-- Relationships tooltip -->
													<Button.ToolTip>
														<ToolTip Style="{StaticResource RelationshipsToolTipStyle}" 
																Placement="Left" 
																Content="{Binding}" 
																DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" >
															<ToolTip.ContentTemplate>
																<DataTemplate>
																	<ContentControl Style="{StaticResource HUDTooltipBorderStyle}" Width="{StaticResource HUDTooltipMaxWidthSmall}">
																		<Grid>
																			<Grid.ColumnDefinitions>
																				<ColumnDefinition Width="{StaticResource HUDTooltipGutterWidthGridLength}" />
																				<ColumnDefinition Width="*" />
																			</Grid.ColumnDefinitions>											
																			<StackPanel Orientation="Vertical" Grid.Column="1">
																				<!-- "Tribute" -->
																				<TextBlock Text="{esUtility:LocString $64c5019a145c4e4da448dbd3adeea61e:126}"
																						Style="{StaticResource HUDPrimaryColorLightTitleTextBlock18ptStyle}" />
																				<Grid HorizontalAlignment="Left">
																					<Border Background="{StaticResource ButtonBackgroundBrush}" Opacity="0.5" />
																					<!-- "Left or Right click to change relation." -->
																					<TextBlock Text="{esUtility:LocString $64c5019a145c4e4da448dbd3adeea61e:127}"
																							   Style="{StaticResource HUDWhiteBaseTextBlock14ptStyle}"
																							   TextWrapping="Wrap"
																							   Margin="6,2,7,2" />
																				</Grid>																			
																				<TextBlock Text="{Binding [tooltip][help]}" 
																						Style="{StaticResource HUDGray80ParagraphTextBlock14ptStyle}" 
																						Margin="{StaticResource SmallMarginTop}" />
																				<TextBlock Text="{Binding [tooltip][requirements]}" 
																						Style="{StaticResource HUDErrorColorLightParagraphTextBlock14ptStyle}" 
																						Margin="{StaticResource SmallMarginTop}" />
																			</StackPanel>
																		</Grid>
																	</ContentControl>													
																</DataTemplate>
															</ToolTip.ContentTemplate>
														</ToolTip>
													</Button.ToolTip>
												</Button>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
									
									<Rectangle Grid.Row="1" Grid.ColumnSpan="3"
											   Style="{StaticResource RelationshipsHorizontalSeparatorStyle}" />
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>		
					</ItemsControl>
				</Grid>
			</ContentControl>
		</ContentControl>
	</Grid>
</Grid>]]
		
		UI_AddChild("ScarNotReplay", "XamlPresenter", "RelationshipsUI", { IsHitTestVisible = true, Xaml = Xaml, DataContext = UI_CreateDataContext(_relationships.data_context) })		
		UI_AddCommandBinding("hud_game", "toggle_relationships_panel", "Relationships_ToggleRelationshipsUI")
		_relationships.is_ui_created = true
	end
end

function Relationships_RemoveUI()
	if _relationships ~= nil then
		UI_RemoveCommandBinding("hud_game", "toggle_relationships_panel")
		UI_Remove("RelationshipsUI")
		_relationships.is_ui_created = false
		PlayerColour_ClearConfigChangedCallback()
	end
end

function Relationships_UpdateUI()
	-- UI_SetDataContext() is expensive so only call it once per frame (e.g. score changes when >1 squads die in a frame)
	if not Rule_Exists(Rule_Relationships_UpdateUI) then
		Rule_AddOneShot(Rule_Relationships_UpdateUI, 0.125)
	end
end

function Rule_Relationships_UpdateUI()		 			
	if _relationships ~= nil and _relationships.is_ui_created then 
		UI_SetDataContext("RelationshipsUI", _relationships.data_context)
	end
end

function Relationships_Restart()
	Relationships_RemoveUI()
	Relationships_CreateUI()
	Relationships_UpdateDataContext()
end

-- Callback invoked by Core_OnGameOver()
function Relationships_OnGameOver()
	Rule_RemoveGlobalEvent(Relationships_OnUpgradeComplete)	
	Rule_RemoveGlobalEvent(Relationships_OnPlayerNameChanged)
	Relationships_RemoveUI()
end

-- Callback invoked by Core_OnGameRestore()
function Relationships_OnGameRestore()
	_relationships.is_ui_created = false	-- coming in from a savegame - the UI won't have been saved so we need to clear this flag and then recreate the UI
	Relationships_CreateUI()
	Relationships_OnPlayerNameChanged()
end

-- Callback invoked by Relationships button
function Relationships_ToggleRelationshipsUI()	
	_relationships.data_context.is_ui_expanded = not _relationships.data_context.is_ui_expanded	
	if(_relationships.data_context.is_ui_expanded) then
		UI_AddEventHandler("Scar", "HUDPageBase.Cancel", "Relationships_HideRelationshipsUI")
		Rule_AddGlobalEvent(Relationships_OnPlayerTeamChanged, GE_PlayerTeamIdUpdated)
	else
		UI_RemoveEventHandler("Scar", "HUDPageBase.Cancel", "Relationships_HideRelationshipsUI")
		Rule_RemoveGlobalEvent(Relationships_OnPlayerTeamChanged)
	end
	Relationships_UpdateDataContext()
end

-- Force menu open or closed (more for use by mission scripts)
function Relationships_ShowRelationshipsUI(show)
	if(_relationships.data_context.is_ui_expanded ~= show) then
		Relationships_ToggleRelationshipsUI()
	end
end

-- callback invoked by pressing the ESC key while Diplomacy panel is open
function Relationships_HideRelationshipsUI(context)
	if(_relationships.data_context.is_ui_expanded) then
		Relationships_ToggleRelationshipsUI()
	end
end

-- Callback used to show/hide scripted UI elements. 
function Relationships_ShowUI(show)
	if _relationships ~= nil and scartype(show) == ST_BOOLEAN then 
		_relationships.data_context.is_ui_visible = show
		Relationships_UpdateUI()
	end
end
