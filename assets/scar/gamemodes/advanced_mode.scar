-----------------------------------------------------------------------
--
-- Standard Game Mode 
--
-- (c) Relic Entertainment 2017
--
-----------------------------------------------------------------------
import("cardinal.scar")

-----------------------------------------------------------------------
-- Scripting framework 
-----------------------------------------------------------------------

Core_RegisterModule("AdvancedMode")		-- Call this before importing vision.scar so StandardMode_OnGameSetup() is called before Vision_OnGameSetup()   


import("gameplay/custom_options.scar")

-- replay system
import("replay/replaystatviewer.scar")

-- gameplay systems
import("gameplay/score.scar")
--import("gameplay/diplomacy.scar")
--import("gameplay/relationships.scar")
import("gameplay/diplomacy_reworked.scar")
import("gameplay/vision.scar")
import("gameplay/cheat.scar") 

-- start conditions 
-- we will use our own, so it behaves as intended always.
--import("startconditions/classic_start.scar")
--import("startconditions/nomad_start.scar")

-- win conditions
import("winconditions/annihilation.scar")	-- When conquest, religious, and wonder are all unselected in match options
import("winconditions/elimination.scar")	-- For players who quit or drop (through pause menu or disconnection)
import("winconditions/surrender.scar")		-- For players who surrender (through pause menu)
import("winconditions/conquest.scar")
import("winconditions/wonder.scar")
import("winconditions/religious.scar")
import("winconditions/regicide.scar")

-- training
import("training/coretraininggoals.scar")
import("training/frenchtraininggoals.scar")
import("training/englishtraininggoals.scar")
import("training/sultanatetraininggoals.scar")
import("training/rustraininggoals.scar")
import("training/mongoltraininggoals.scar")
import("training/chinesetraininggoals.scar")
import("training/abbasidtraininggoals.scar")

-- UI support
import("gameplay/event_cues.scar")
import("gameplay/currentageui.scar")
import("gameplay/chi/current_dynasty_ui.scar")

-----------------------------------------------------------------------
-- Data
-----------------------------------------------------------------------

_match = {
	options = {},
	is_cheat_enabled = false,
	is_diplomacy_enabled = false,
	is_tribute_enabled = true,
	speed = {						-- modifier multipliers 
		setspeed = 1,
		build = 1,
		repair = 1,
		gather = 1,		
		upgrade = 1,
		production = 1,
		modifiers = {},
	},
	custom = {
		max_age = 4,	
	},
	ebps = {
		townCenterCapital = {			-- blueprints by race (filled dynamically)
		},
		townCenter = {			-- blueprints by race (filled dynamically)
		},
	},
	types = {
		townCenterCapital = "town_center_capital",
		townCenter = "town_center",
		landmark = "landmark",
	},
	ages = {   					
		{			
			option = "option_start_age_1",
			initialUpgrades = {
				BP_GetUpgradeBlueprint("dark_age"),
			},
		},
		{			
			option = "option_start_age_2", 
			initialUpgrades = {						
				BP_GetUpgradeBlueprint("dark_age"),
				BP_GetUpgradeBlueprint("feudal_age"),
			},
		},
		{			
			option = "option_start_age_3",
			initialUpgrades = {
				BP_GetUpgradeBlueprint("dark_age"),
				BP_GetUpgradeBlueprint("feudal_age"),
				BP_GetUpgradeBlueprint("castle_age"),
			},
		},
		{			
			option = "option_start_age_4",
			initialUpgrades = {
				BP_GetUpgradeBlueprint("dark_age"),
				BP_GetUpgradeBlueprint("feudal_age"),
				BP_GetUpgradeBlueprint("castle_age"),
				BP_GetUpgradeBlueprint("imperial_age"),
			},
		},
	},
	nomad = {
		wood = 400,
		stone = 300,
	},
	FOWRevealRadius = 70, -- radius around player start position within which FOW is initially revealed

	
}

-----------------------------------------------------------------------
-- Callbacks
-----------------------------------------------------------------------

function AdvancedMode_OnGameSetup()
	
	Setup_GetWinConditionOptions(_match.options)
	
	-- Win condition options
	if _match.options.section_inner_win_conditions then
		if not _match.options.section_inner_win_conditions.option_win_condition_conquest then
			Core_UnregisterModule("Conquest")
		end	
	
		if not _match.options.section_inner_win_conditions.option_win_condition_religious then
			Core_UnregisterModule("Religious")
		end
		
		if not _match.options.section_inner_win_conditions.option_win_condition_wonder then
			Core_UnregisterModule("Wonder")
		end	
		
		if not _match.options.section_inner_win_conditions.option_win_condition_regicide then
			Core_UnregisterModule("Regicide")
		end	
	end

	--Starting age
	--if _match.options.section_custom_conditions and 
	--	_match.options.section_custom_conditions.option_start_nomad then 
	--	Core_UnregisterModule("ClassicStart")
	--else
	--	Core_UnregisterModule("NomadStart")				
	--end

	--Shared vision
	if not _match.options.section_starting_conditions
		or not _match.options.section_starting_conditions.option_vision
		or _match.options.section_starting_conditions.option_vision.enum_value == _match.options.section_starting_conditions.option_vision.enum_items.option_vision_default then
		Core_UnregisterModule("Vision")	
	end
	
	--Diplomacy options
	if _match.options.section_diplomacy then
		_match.is_diplomacy_enabled = not _match.options.section_diplomacy.option_diplomacy_teams		
		_match.is_tribute_enabled = _match.options.section_diplomacy.option_diplomacy_tribute
	end
	
	-- Set player behaviour when eliminated
	if _match.options.section_endgame then 
		allow_spectators = _match.options.section_endgame.option_allow_spectators
	end
	
end

function AdvancedMode_OnInit()
	UI_AllTerritoryHide()

	Core_CallDelegateFunctions("DiplomacyEnabled", _match.is_diplomacy_enabled)
	Core_CallDelegateFunctions("TributeEnabled", _match.is_tribute_enabled)
	
	ReplayStatViewer_PopulateReplayStatTabs({"CurrentResourcesTemplate", "IncomeTemplate", "MilitaryTemplate"})	

	CustomOptions_SetPopCap(_match)
	CustomOptions_SetGameSpeed(_match)
	CustomOptions_LockAgeUp(_match)	
	CustomOptions_AddGameSpeedRule()
end

function AdvancedMode_PostInit()
	-- Spawn TC or Nomad
	CustomOptions_HandleStartPosition(_match)
	-- Spawn each civilization squad
	CustomOptions_SpawnInitialSquads()
	-- Spawn king even if regicide is disabled for players that choose this option
	if not _match.options.section_inner_win_conditions.option_win_condition_regicide then
		
		if _match.options.section_custom_conditions_2.spawn_king then
			CustomOptions_SpawnKeeps()
		end	
	end	
	-- Spawn keep if it was allowed
	if _match.options.section_custom_conditions_2.spawn_keep then
		CustomOptions_SpawnKings()		
	end	
end

function AdvancedMode_Start()
	if _match.options.section_custom_conditions and 
		_match.options.section_custom_conditions.option_start_nomad then 
		-- nomad
		CustomOptions_NomadStartInit(_match)
	end
	CustomOptions_SetFOW(_match)
	CustomOptions_EnableScore(_match)
end

function AdvancedMode_OnGameOver()
	CustomOptions_RemoveGameSpeedRule()
end