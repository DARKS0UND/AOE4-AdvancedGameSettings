---------------------------------------------------------------------------------------------------
--
--  UI
--
-- UI component of CookieCliker system.  
--
---------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------
-- Data
---------------------------------------------------------------------------------------------------

_cookie_button = {
	ui = "AGS_MatchUI",
	is_ui_created = false,
	data_context = {
		is_ui_visible = true,
		is_dropdown_visible = false,
		command = {
			toggle_dropdown = UI_CreateCommand("AGS_MatchUI_ToggleDropdown"),
		},
		data = {
			player = "Cookie",
			player_name = "Cookie",
			player_race = "Cookie",
			player_team = "-",
			update_count = -1,
			update_value = "-1",
		},
	},
}

---------------------------------------------------------------------------------------------------
-- Scripting framework 
---------------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------------
-- Delegates:
---------------------------------------------------------------------------------------------------

Core_RegisterModule("AGS_MatchUI")

-- Callback invoked by Core::OnInit()
function AGS_MatchUI_OnInit()
	AGS_MatchUI_CreateDataContext()
	-- Here would be condition to unload it
	-- Core_UnregisterModule("AGS_MatchUI")	
end

-- Called by _StartMission() in core.scar
function AGS_MatchUI_Start()	
	AGS_MatchUI_CreateAndUpdateUI()
end

-- Callback invoked by Core_OnGameRestore()
--function AGS_MatchUI_OnGameRestore()
--	_cookie_button.is_ui_created = false	-- coming in from a savegame - the UI won't have been saved so we need to clear this flag and then recreate the UI
--	AGS_MatchUI_CreateAndUpdateUI()
--end

-- Callback invoked by Core_OnGameOver()
-- Stops rules rules and removes UI elements associated with CurrentAgeUI module before end mission/match screen is displayed.
function AGS_MatchUI_OnGameOver()	
	AGS_MatchUI_Show(false)
end

-- Callback invoked by Core_SetPlayerDefeated() when a player is eliminated.
function AGS_MatchUI_OnPlayerDefeated(player, reason)
	if player.isLocal then 
		AGS_MatchUI_Show(false)
	end
end

---------------------------------------------------------------------------------------------------
-- Rules
---------------------------------------------------------------------------------------------------

function AGS_MatchUI_CreateDataContext()
	--local local_player = Game_GetLocalPlayer()
	_cookie_button.data_context.data.player = "Player Cookie" 			--local_player
	_cookie_button.data_context.data.player_name = "Cookie Lord"		--Player_GetDisplayName(local_player)
	_cookie_button.data_context.data.player_race = "Dark Cookie"		--Player_GetRace(local_player)
	_cookie_button.data_context.data.player_team = "-"
	_cookie_button.data_context.data.update_count = 0	
	_cookie_button.data_context.data.update_value = tostring(0)	
end

function Rule_AGS_MatchUI_UpdateUI()		 			
	if _cookie_button ~= nil and _cookie_button.data_context ~= nil then 
		AGS_MatchUI_Update()
	end
end

function AGS_MatchUI_Update()
	--local local_player = Game_GetLocalPlayer()
	local update = _cookie_button.data_context.data.update_count + 1
	_cookie_button.data_context.data.update_count = update	
	_cookie_button.data_context.data.update_value = tostring(update)	
		
	if _cookie_button.is_ui_created then 
		UI_SetDataContext(_cookie_button.ui, _cookie_button.data_context)	
	end
end

---------------------------------------------------------------------------------------------------
-- Functions:
---------------------------------------------------------------------------------------------------

function AGS_MatchUI_Show(show_ui)
	if _cookie_button.is_ui_created then 
		_cookie_button.data_context.is_ui_visible = show_ui
		UI_SetDataContext(_cookie_button.ui, _cookie_button.data_context)		
	end
end

function AGS_MatchUI_CreateAndUpdateUI()	
	
	AGS_MatchUI_CreateUI()
	
	if not Rule_Exists(Rule_AGS_MatchUI_UpdateUI) then
		Rule_AddInterval(Rule_AGS_MatchUI_UpdateUI, 0.250)
	end
end

function AGS_MatchUI_CreateUI()	
	if not _cookie_button.is_ui_created then
		
		local xaml = [[<Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:esControls="clr-namespace:WPFGUI.Shared.Controls;assembly=EngineUI"
		xmlns:esUtility="clr-namespace:WPFGUI.Shared.Utility;assembly=EngineUI"
		xmlns:wm="clr-namespace:WPFGUI.Shared.MarkupExtensions;assembly=EngineUI"
		HorizontalAlignment="Center" 
		VerticalAlignment="Center"  
		Visibility="{Binding [is_ui_visible], Converter={StaticResource BoolToVis}}">
	<Grid.RowDefinitions>
	    <RowDefinition Height="Auto" />
	    <RowDefinition Height="*" />
	</Grid.RowDefinitions>
	<Button Grid.Row="0" 
			Width="500"
			Height="100"
			Panel.ZIndex="2"
			Content="Get cookie"
			Command="{Binding [command][toggle_dropdown]}">	
	</Button>
	<Border Grid.Row="1"
		    Panel.ZIndex="1"
			Width="300"
			Height="500"
			BorderBrush="Lime"
		    Visibility="{Binding [is_dropdown_visible], Converter={StaticResource BoolToVis}}">
		<Grid>
			<Grid.RowDefinitions>
			    <RowDefinition Height="Auto" />
			    <RowDefinition Height="Auto" />
			    <RowDefinition Height="Auto" />
			    <RowDefinition Height="Auto" />
			    <RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
	        <TextBlock Grid.Row="0" Text="Welcome to the dark side!" />
	        <TextBlock Grid.Row="1" Text="{Binding [data][player_name]}" />
	        <TextBlock Grid.Row="2" Text="{Binding [data][player_race]}" /> 
	        <TextBlock Grid.Row="3" Text="{Binding [data][player_team]}" /> 
	        <TextBlock Grid.Row="4" Text="{Binding [data][update_value]}" />  
		</Grid>
	</Border>
  </Grid>
]]
		
		UI_AddChild("ScarDefault", "XamlPresenter", _cookie_button.ui, { IsHitTestVisible = true, Xaml = xaml, DataContext = UI_CreateDataContext(_cookie_button.data_context) })
		_cookie_button.is_ui_created = true
	end
end


function AGS_MatchUI_ToggleDropdown(context)
	_cookie_button.data_context.is_dropdown_visible = not _cookie_button.data_context.is_dropdown_visible
	UI_SetDataContext(_cookie_button.ui, _cookie_button.data_context)	
	if(_cookie_button.data_context.is_dropdown_visible) then
		UI_AddEventHandler("Scar", "HUDPageBase.Cancel", "AGS_MatchUI_HideDropdown")
	else
		UI_RemoveEventHandler("Scar", "HUDPageBase.Cancel", "AGS_MatchUI_HideDropdown")
	end
end

-- callback invoked by pressing the ESC key while Cookie panel is open
function AGS_MatchUI_HideDropdown(context)
	if(_cookie_button.data_context.is_dropdown_visible) then
		AGS_MatchUI_ToggleDropdown()
	end
end